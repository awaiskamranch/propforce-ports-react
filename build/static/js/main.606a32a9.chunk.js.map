{"version":3,"sources":["assets/propforce-white.png","constants.js","pages/SetPort/SetPort.js","pages/Landing/Landing.js","reportWebVitals.js","index.js"],"names":["config","url","Option","Select","SetPort","ports","setActivePort","setActiveUser","useState","setError","setIsLoaded","users","setUsers","useEffect","fetchUsers","fetch","then","res","json","result","console","log","error","message","class","showSearch","style","width","placeholder","optionFilterProp","className","onChange","userName","filterOption","input","option","children","toLowerCase","indexOf","allowClear","map","user","value","name","_id","portId","port","Header","Layout","Footer","Content","Landing","setPorts","activePort","activeUser","isModalVisible","setIsModalVisible","fetchPorts","src","logo","alt","PlusOutlined","onClick","title","visible","onOk","requestOptions","method","headers","body","JSON","stringify","updatePort","onCancel","item","content","CloseCircleOutlined","removePortUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.606a32a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/propforce-white.8b48787f.png\";","const production = {\n  url: \"https://propforce-ports-node.herokuapp.com/\",\n};\n\nconst development = {\n  url: \"http://localhost:2000\",\n};\n\nexport const config =\n  process.env.NODE_ENV === \"development\" ? development : production;\n","import React, { useState, useEffect } from \"react\";\nimport \"./SetPort.css\";\nimport { Select } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { config } from \"../../constants\";\n\nconst { Option } = Select;\n\nfunction SetPort({ ports, setActivePort, setActiveUser }) {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = () => {\n    fetch(`${config.url}/api/user`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          console.log(result);\n          setIsLoaded(true);\n          setUsers(result);\n        },\n        (error) => {\n          console.log(error.message);\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  };\n\n  function handleNameChange(userName) {\n    setActiveUser(userName);\n  }\n\n  function handlePortChange(portId) {\n    setActivePort(portId);\n  }\n\n  return (\n    <div class=\"set-port-container\">\n      <Select\n        showSearch\n        style={{ width: 200 }}\n        placeholder=\"Select Your Name\"\n        optionFilterProp=\"children\"\n        className=\"port-dropdown\"\n        onChange={handleNameChange}\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        allowClear\n      >\n        {users.map((user) => (\n          <Option key={user._id} value={user.name}>\n            {user.name}\n          </Option>\n        ))}\n      </Select>\n\n      <Select\n        showSearch\n        style={{ width: 200 }}\n        placeholder=\"Select the port\"\n        optionFilterProp=\"children\"\n        className=\"port-dropdown\"\n        onChange={handlePortChange}\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        allowClear\n      >\n        {ports.map((port) => (\n          <Option key={port._id} value={port._id}>\n            {port.name}\n          </Option>\n        ))}\n      </Select>\n    </div>\n  );\n}\n\nexport default SetPort;\n","import { useState, useEffect } from \"react\";\nimport \"./Landing.css\";\nimport logo from \"../../assets/propforce-white.png\";\nimport wave from \"../../assets/wave.png\";\nimport { Layout, Modal, Popover } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { PlusOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport SetPort from \"../SetPort/SetPort\";\nimport { config } from \"../../constants\";\n\nconst { Header, Footer, Content } = Layout;\n\nfunction Landing() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [ports, setPorts] = useState([]);\n  const [activePort, setActivePort] = useState(null);\n  const [activeUser, setActiveUser] = useState(null);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  useEffect(() => {\n    fetchPorts();\n  }, []);\n\n  const fetchPorts = () => {\n    fetch(`${config.url}/api/port`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setPorts(result);\n        },\n        (error) => {\n          console.log(error.message);\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  };\n\n  const updatePort = (port) => {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(port),\n    };\n\n    fetch(`${config.url}/api/port`, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          fetchPorts();\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  };\n\n  const removePortUser = (portId) => {\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: portId, user: null }),\n    };\n    fetch(`${config.url}/api/port`, requestOptions)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          fetchPorts();\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    updatePort({ _id: activePort, name: activeUser });\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <Layout>\n      <Header>\n        <div className=\"title\">\n          <img className=\"logo\" src={logo} alt=\"Propforce\" />\n          <div>PORTS</div>\n        </div>\n        <PlusOutlined className=\"add-icon\" onClick={showModal} />\n\n        <Modal\n          title=\"Set Port\"\n          visible={isModalVisible}\n          onOk={handleOk}\n          onCancel={handleCancel}\n        >\n          <SetPort\n            ports={ports}\n            setActivePort={setActivePort}\n            setActiveUser={setActiveUser}\n          ></SetPort>\n        </Modal>\n      </Header>\n      <Content>\n        <div className=\"port-container\">\n          <div className=\"port-inner-container\">\n            <ul className=\"port-list\">\n              {ports.map((item) =>\n                item.user && item.user.name ? (\n                  <Popover content={item.user.name}>\n                    <li\n                      className={`port ${item.user ? \"occupied\" : \"free\"}`}\n                      key={item._id}\n                    >\n                      {item.name}\n                      <CloseCircleOutlined\n                        onClick={() => removePortUser(item._id)}\n                        className=\"remove-icon\"\n                      />\n                    </li>\n                  </Popover>\n                ) : (\n                  <li\n                    className={`port ${\n                      item.user && item.user.name ? \"occupied\" : \"free\"\n                    }`}\n                    key={item._id}\n                  >\n                    {item.name}\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n        </div>\n        <div className=\"wave\"></div>\n        <div className=\"wave\"></div>\n      </Content>\n      <Footer>\n        <div className=\"footerTitle\">Propforce © 2021</div>\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default Landing;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Landing from \"./pages/Landing/Landing\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Landing />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}